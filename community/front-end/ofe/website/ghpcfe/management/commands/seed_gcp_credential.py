# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Credential configuration seed"""

from django.core.management.base import BaseCommand
from ghpcfe.models import Credential
from ghpcfe.models import User


class Command(BaseCommand):
    """Helper to insert a default GCP credential into OFE
    """
    help = (
        "Adds a credential generated by the deployment script to OFE"
    )

    # def add_arguments(self, parser):
    #     parser.add_argument('poll_ids', nargs='+', type=int)

    def handle(self, *args, **options):
        self.stdout.write("Adding credential to OFE...", ending="\n")

        default_user = User.objects.get(pk=1)
        file_path = '/tmp/credential.json'
        try:
            with open(file_path, 'r') as credential_file:
                credential_string = credential_file.read()

            # create small preset
            default1 = Credential()
            default1.name = "Default"
            default1.owner = default_user
            default1.detail = credential_string
            default1.save()
            self.stdout.write(
                str(default1)
                + ", Name: "
                + default1.name
                + ", Owner: "
                + "1"
                + ", Detail: "
                + default1.detail,
                ending="\n",
            )

            self.stdout.write("Added GCP credential to OFE", ending="\n")

        except FileNotFoundError:
            print(f"Credential file {file_path} not found.")
        except Exception as e:
            print(f"An error occurred: {str(e)}")
